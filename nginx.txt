---
- hosts: all
  become: yes
  forks: 50
  tasks:
    - name: Install Mysql database
      apt:
        name: "{{item}}"
        update_cache: yes
        state: present
      with_items:
        - mysql-server
        - mysql-client
        - python3-mysqldb
        - libmysqlclient-dev
      when: ansible_os_family == "Debian"
    - name: Install Mysql database
      yum:
        name: "{{item}}"
        state: present
      with_items:
        - mysql-server
        - mysql-client
        - python3-mysqldb
        - libmysqlclient-dev
      when: ansible_os_family == "RedHat"
    - name: start and enable mysql service
      service:
        name: mysql
        state: started
        enabled: yes
    - name: creating mysql user 
      mysql_user:
        name: mysql
        password: mysql
        state: present
     - name: Enable remote login to mysql
       lineinfile:
         path: /etc/mysql/mysql.conf.d/mysqld.cnf
         regexp: '^bind-address'
         line: 'bind-address = 0.0.0.0'
         backup: yes
       notify:
          - Restart mysql
  handlers:
    - name: Restart mysql
      service:
        name: mysql
        state: restarted
===================================

    ===========================================
- name: setup Mysql with medium_db db and remote login
  become: yes
  hosts: Dbservers
  tasks:
    - name: Installing Mysql  and dependencies
      package:
       name: "{{item}}"
       state: present
       update_cache: yes
     loop:
       - mysql-server
       - mysql-client 
       - python3-mysqldb
       - libmysqlclient-dev
     become: yes
    - name: start and enable mysql service
      service:
        name: mysql
        state: started
        enabled: yes
    - name: creating mysql user (medium_post)
      mysql_user:
        name: "{{db_user}}"
        password: "{{db_pass}}"
        priv: '*.*:ALL'
        host: '%'
        state: present
    - name: creating medium_db
      mysql_db:
        name: "{{db_name}}"
        state: present
    - name: Enable remote login to mysql
      lineinfile:
         path: /etc/mysql/mysql.conf.d/mysqld.cnf
         regexp: '^bind-address'
         line: 'bind-address = 0.0.0.0'
         backup: yes
      notify:
         - Restart mysql
  handlers:
    - name: Restart mysql
      service:
        name: mysql
        state: restarted


===============================================================================

dockerfile

    FROM nginx:alpine

    COPY ./Home ./usr/share/nginx/html/home
    COPY ./Profile ./usr/share/nginx/html/profile
    COPY ./Dashboard ./usr/share/nginx/html/dashboard

    COPY ./nginx.conf ./etc/nginx/conf.d/default.conf

    EXPOSE 80
--------------------------------------------------------
nginx.conf

 server {
        listen          80;
        root            /usr/share/nginx/html;

        include         /etc/nginx/mime.types;
        default_type    application/octet-stream;
        # home page
        location /home {
            index index.html index.htm;
            try_files $uri $uri/ /index.html =404;
        }

        # dashboard page
        location /dashboard {
            index index.html index.htm;
            try_files $uri $uri/ /index.html =404;
        }
        # profile page
        location /profile {
            index index.html index.htm;
            try_files $uri $uri/ /index.html =404;
        }

        # root - nginx default
        location / {
            index index.html index.htm;
        }
        # Any route containing a file extension (e.g. /devicesfile.js)
        location ~ ^.+\..+$ {
            try_files $uri =404;
        }
    }
